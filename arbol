clase arbol{
   
     principal(){
        Nodo raiz = nuevo Nodo();
        
        raiz.CrearNodo(5);
        InsertarNuevoNodo(raiz, 3);
        InsertarNuevoNodo(raiz, 9);
        InsertarNuevoNodo(raiz, 35);
        InsertarNuevoNodo(raiz, 6);
        InsertarNuevoNodo(raiz, -5);
        InsertarNuevoNodo(raiz, -13);
        InsertarNuevoNodo(raiz, -3);
        InsertarNuevoNodo(raiz, 1);
        InsertarNuevoNodo(raiz, 10);
        InsertarNuevoNodo(raiz, 2);
        InsertarNuevoNodo(raiz, 9);
        InsertarNuevoNodo(raiz, 8);
        InsertarNuevoNodo(raiz, 4);
        InsertarNuevoNodo(raiz, 7);
        InsertarNuevoNodo(raiz, -1);
        InsertarNuevoNodo(raiz, 50);
        InsertarNuevoNodo(raiz, 6);
        InsertarNuevoNodo(raiz, 11);
        imprimir("primera parte");
         raiz.ImprimirIn();
         imprimir("segunda parte");
        raiz.ImprimirPre();
        imprimir("tercera parte");
        raiz.ImprimirPost();
    }

    vacio InsertarNuevoNodo(Nodo raiz, entero val){
        //creamos el nodo
         Nodo nuevos = nuevo Nodo();
        //asignamos el nuevo valor porque no hay contructores
         nuevos.CrearNodo(val);
        //asignamos el nuevo nodo a la raiz
         raiz.InsertarNodo(nuevos);    
    }

}

clase Nodo {
     Nodo izq;
     Nodo der;
     booleano hijoi = false;
     booleano hijod = false;
     entero valor = 0;

    vacio CrearNodo(entero val) {
        valor = val;
    }

    vacio InsertarNodo(Nodo new) {
        si (new.valor <= valor) {
            es_verdadero {
                si (hijoi == false) {
                    es_verdadero {
                        izq = new;
                        hijoi = true;
                    }
                    es_falso {
                        izq.InsertarNodo(new);
                    }
                }
            }
            
            es_falso {
                si (hijod == false) {
                    es_verdadero{
                        der = new;
                        hijod = true;
                    }
                    es_falso{
                        der.InsertarNodo(new);
                    }
                }
            }
        }
    }
    vacio ImprimirIn(){
        si(hijoi != false) {
            es_verdadero {
                izq.imprimirIn();
            } es_falso {

            }
        }
        
        imprimir(valor);
        
        si(hijod != false){
            es_verdadero{
                der.imprimirIn();
            }
            es_falso {
        
            }
        }
    }
    
    vacio ImprimirPost() {
        si (hijoi != false) {
            es_verdadero {
                 izq.imprimirPost();
            }
            es_falso {
            
            }
        }   

        si (hijod != false) {
            es_verdadero {
                 der.imprimirPost();
            }
            es_falso {
            
            }
        }
        imprimir(valor);
    }

    vacio ImprimirPre() {
        imprimir(valor);
        
        si (hijoi != false) {
            es_verdadero {
                izq.imprimirPre();
            }
            es_falso {
            
            }
        }

        si (hijod != false) {
            es_verdadero {
                der.imprimirPre();
            }
            es_falso {
            
            }
        }
    }
}



clase main {

    vacio principal() {
        
        Si((5>(1+2) && true ) || ((5+2)-1)<10 || !(false)){
            funciones1 f1 = nuevo funciones1()?

            
            imprimir("-------------------------------- Primera Validación---------------------------")?
            entero areaCuadrado = f1.areaCuadradoTriangulo(0, 5, "cuadrado").areaCuadrado?
            imprimir("El cuadrado tiene área de 25")?
            imprimir("El área del cuadrado es: " + areaCuadrado)?
            decimal areaTriangulo = f1.areaCuadradoTriangulo("triangulo", 7, 5).areaTriangulo?
            imprimir("El triangulo tiene área de 17.5")?
            imprimir("El área del triangulo es: " + areaTriangulo)?
            imprimir("------------------------------------------------------------------------------")?
            
            
            imprimir("-------------------------------- Segunda Validación---------------------------")?
            decimal areaCirculo = f1.areaCirculo(7.8).areaCirculo?
            imprimir("El circulo tiene área de 191.134944")?
            imprimir("El área del circulo es: " + areaCirculo)?
            imprimir("------------------------------------------------------------------------------")?
            

            imprimir("-------------------------------- Tercera Validación---------------------------")?
            imprimir("Fibinacci resultado = 1,1,2,3,5,8,13")?
            entero n = 7?
            Para  entero i = 1 : i <= n : i++){
                imprimir(i + ": " + f1.fibonacci(i))?
            }
            imprimir("------------------------------------------------------------------------------")?
            
                
            
            imprimir("-------------------------------- Quinta Validación---------------------------")?
            entero fact = f1.Factorial(7)?
            imprimir("El factorial de 7? debe ser 5040")?
            imprimir("El factorial de 7: " + fact)?
            imprimir("------------------------------------------------------------------------------")?

        }
    }
    
}